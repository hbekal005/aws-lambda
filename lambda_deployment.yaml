AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  LambdaCodeS3Bucket:
    Type: String
    Description: The name of the S3 bucket where the Lambda code is stored

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - ec2:*
                  - cloudwatch:*
                  - logs:*
                Resource: "*"

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: create_lambda.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      FunctionName: MyEC2S3Function
      Code:
        S3Bucket: !Ref LambdaCodeS3Bucket
        S3Key: "lambda_code.zip"
      Runtime: python3.8
      Timeout: 300
      MemorySize: 256

  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: LambdaTriggerRule
      ScheduleExpression: cron(0 9 ? * 2 *)  # Every Monday at 9 AM GMT
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: LambdaFunctionTarget

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt CloudWatchEventRule.Arn